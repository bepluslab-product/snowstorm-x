<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>Snowstorm X</name>
	<description>Terminology Server using Elasticsearch with advanced SNOMED CT features</description>

	<parent>
		<groupId>org.snomed</groupId>
		<artifactId>snomed-parent-bom</artifactId>
		<version>1.0.6</version>
	</parent>

	<artifactId>snowstorm-x</artifactId>
	<version>8.3.0</version>

	<properties>
		<packageName>${project.artifactId}</packageName>
		<!--
		Current Elasticsearch _Server_ version supported by AWS is 7.10.0
		N.B. Remember to keep TestConfig.ELASTIC_SEARCH_SERVER_VERSION and getting-started guide updated.
		-->
	</properties>

	<dependencies>
		<dependency>
			<!-- Branching and Version Control on top of Elasticsearch -->
			<groupId>io.kaicode</groupId>
			<artifactId>elasticvc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.elasticsearch</groupId>
					<artifactId>jna</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>transport</artifactId>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.plugin</groupId>
			<artifactId>transport-netty4-client</artifactId>
		</dependency>
		<dependency>
			<!-- For RF2 Import -->
			<groupId>org.snomed.otf</groupId>
			<artifactId>snomed-boot</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.collections</groupId>
					<artifactId>google-collections</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- Different version of the SNOMED OWL Toolkit with incremental classification support -->
			<groupId>org.snomed.otf</groupId>
			<artifactId>snomed-owl-toolkit-incremental</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.snomed.languages</groupId>
			<artifactId>snomed-ecl-parser</artifactId>
		</dependency>
		<dependency>
			<groupId>org.snomed.languages</groupId>
			<artifactId>snomed-scg-parser</artifactId>
		</dependency>
		<dependency>
			<groupId>org.snomed.cis</groupId>
			<artifactId>cis-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-aws-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ihtsdo.otf</groupId>
			<artifactId>ihtsdo-spring-sso</artifactId>
		</dependency>
		<dependency>
			<groupId>net.jodah</groupId>
			<artifactId>typetools</artifactId>
		</dependency>
		<dependency>
			<groupId>io.kaicode</groupId>
			<artifactId>branch-path-uri-rewrite-filter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ihtsdo.drools</groupId>
			<artifactId>snomed-drools-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-r4</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-server</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-sql-migrate</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.elasticsearch.client</groupId>
					<artifactId>elasticsearch-rest-high-level-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate.search</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.lucene</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<!-- Not needed, was causing build failure "Could not find artifact". -->
					<groupId>com.github.jsonld-java</groupId>
					<artifactId>jsonld-java</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.graphql-java</groupId>
					<artifactId>graphql-java</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish</groupId>
					<artifactId>javax.el</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-core</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Caching -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
		</dependency>
		<dependency><!-- Old logging used by owl-toolkit -->
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.minidev</groupId>
					<artifactId>json-smart</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>elasticsearch</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- consul and vault -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-vault-config</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>org.snomed.snowstorm.SnowstormApplication</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Docker Image Build -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>deb</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.vafer</groupId>
						<artifactId>jdeb</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jdeb</goal>
								</goals>
								<configuration>
									<deb>${project.build.directory}/${packageName}-${project.version}-all.deb</deb>
									<controlDir>${basedir}/src/deb/control</controlDir>
									<snapshotExpand>true</snapshotExpand>
									<snapshotEnv>BUILD_NUMBER</snapshotEnv>
									<verbose>true</verbose>
									<classifier>all</classifier>
									<signPackage>false</signPackage>
									<dataSet>
										<data>
											<src>${project.build.directory}/${project.build.finalName}.jar</src>
											<dst>${packageName}.jar</dst>
											<type>file</type>
											<mapper>
												<type>perm</type>
												<prefix>/opt/${packageName}/</prefix>
											</mapper>
										</data>
										<data>
											<src>${basedir}/src/deb/supervisor.conf</src>
											<dst>/etc/supervisor/conf.d/${packageName}.conf</dst>
											<type>file</type>
										</data>
									</dataSet>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jenkins-exclude-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>TraceabilityLogServiceTest</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>ihtsdo-releases</id>
			<name>ihtsdo-releases</name>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://nexus3.ihtsdotools.org/repository/maven-releases/</url>
		</repository>
		<repository>
			<id>ihtsdo-snapshots</id>
			<name>ihtsdo-snapshots</name>
			<releases>
				<enabled>false</enabled>
			</releases>
			<url>https://nexus3.ihtsdotools.org/repository/maven-snapshots/</url>
		</repository>
	</repositories>

</project>

